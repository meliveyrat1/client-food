{"ast":null,"code":"import axios from \"axios\";\n\n/* export function getRecipes() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/recipes\", {});\n      return dispatch({\n        type: \"GET_RECIPES\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error); //almacenar para mostrar al usuario\n    }\n  };\n} */\n\nexport function getRecipes() {\n  return dispatch => {\n    axios.get(\"http://localhost:3001/recipes\").then(response => {\n      dispatch({\n        type: \"GET_RECIPES\",\n        payload: response.data\n      });\n    }).catch(() => alert(\"Recipe not found\"));\n  };\n}\n\n/* export function getRecipesByName(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(`http://localhost:3001/recipes?name=${name}`);\n      if (json.data.length === 0) {\n        dispatch({\n          type: \"ERROR\",\n          payload: \"Not recipe found\",\n        });\n      }\n      return dispatch({\n        type: \"GET_RECIPES_BY_NAME\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} */\nexport function getRecipesByName(name) {\n  return dispatch => {\n    axios.get(\"http://localhost:3001/recipes?name=\" + name).then(response => {\n      dispatch({\n        type: \"GET_RECIPES_BY_NAME\",\n        payload: response.data\n      });\n    }).catch(() => alert(\"Recipe not found\"));\n  };\n}\nexport function getDiets() {\n  return dispatch => {\n    axios.get(\"http://localhost:3001/types\").then(response => {\n      dispatch({\n        type: \"GET_DIETS\",\n        payload: response.data\n      });\n    }).catch(() => alert(\"Diet not found\"));\n  };\n}\n\n/* export function getDiets() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/types\", {});\n      return dispatch({\n        type: \"GET_DIETS\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} */\n\n/* export function postRecipe(payload) {\n\treturn (dispatch) => {\n\t\taxios.post(\"http://localhost:3001/recipe\", payload)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: \"POST_RECIPE\", payload: response});\n\t\t}).catch(()=> alert(\"Is not possible create a recipe\"))\n\t};\n}   */\n\nexport function postRecipe(payload) {\n  return async function (dispatch) {\n    try {\n      const json = await axios.post(\"http://localhost:3001/recipe\", payload);\n      return json;\n    } catch (error) {\n      alert(\"POST ERROR\");\n    }\n  };\n}\nexport function deleteRecipe(id) {\n  return async function (dispatch) {\n    try {\n      const response = await axios.delete(\"http://localhost:3001/recipe\" + id);\n      console.log(response);\n      return response;\n    } catch (error) {\n      alert(\"DELETE ERROR\");\n    }\n  };\n}\nexport function UpdateRecipe(payload, id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.put(\"http://localhost:3001/recipe\" + id, payload);\n      return dispatch({\n        type: \"UPDATE_RECIPE\",\n        payload: json.data\n      });\n    } catch (error) {\n      alert(\"UPDATE ERROR\");\n    }\n  };\n}\n_c = UpdateRecipe;\nexport function filterRecipesbyDiets(payload) {\n  return {\n    type: \"FILTER_BY_DIETS\",\n    payload\n  };\n}\nexport function filterRecipesbyDishTypes(payload) {\n  return {\n    type: \"FILTER_BY_DISHTYPES\",\n    payload\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload\n  };\n}\nexport function orderByScore(payload) {\n  return {\n    type: \"ORDER_BY_SCORE\",\n    payload\n  };\n}\nexport function orderByLike(payload) {\n  return {\n    type: \"ORDER_BY_LIKE\",\n    payload\n  };\n}\nexport function getDetails(id) {\n  return dispatch => {\n    axios.get(\"http://localhost:3001/recipes/\" + id).then(response => {\n      dispatch({\n        type: \"GET_DETAILS\",\n        payload: response.data\n      });\n    }).catch(() => alert(`Ups...we dont have a recipe with ${id} as ID `));\n  };\n}\n/* export function getDetails(id) {\n  return async function (dispatch) {\n    console.log(\"ID\", id);\n    try {\n      const json = await axios.get(`http://localhost:3001/recipes/${id}`);\n      return dispatch({\n        type: \"GET_DETAILS\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} */\nexport function getNamesRecipes() {\n  return dispatch => {\n    axios.get(\"http://localhost:3001/names\").then(response => {\n      dispatch({\n        type: \"GET_NAMES_RECIPES\",\n        payload: response.data\n      });\n    });\n  };\n}\nexport function filterRecipesbyNames(payload) {\n  return {\n    type: \"FILTER_BY_NAMES\",\n    payload\n  };\n}\nexport function removeDetail() {\n  return {\n    type: \"REMOVE_DETAILS\"\n  };\n}\nexport function removeRecipe() {\n  return {\n    type: \"REMOVE_RECIPE\"\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: \"FILTER_CREATED\",\n    payload\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"UpdateRecipe\");","map":{"version":3,"names":["axios","getRecipes","dispatch","get","then","response","type","payload","data","catch","alert","getRecipesByName","name","getDiets","postRecipe","json","post","error","deleteRecipe","id","delete","console","log","UpdateRecipe","put","filterRecipesbyDiets","filterRecipesbyDishTypes","orderByName","orderByScore","orderByLike","getDetails","getNamesRecipes","filterRecipesbyNames","removeDetail","removeRecipe","filterCreated"],"sources":["C:/Users/aleto/Desktop/PI--FOOD-main meli 3/client/src/actions/index.js"],"sourcesContent":["import axios from \"axios\";\n\n/* export function getRecipes() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/recipes\", {});\n      return dispatch({\n        type: \"GET_RECIPES\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error); //almacenar para mostrar al usuario\n    }\n  };\n} */\n\nexport function getRecipes() {\n\treturn (dispatch) => {\n\t\taxios.get(\"http://localhost:3001/recipes\")\n\t\t.then((response) => {\n\t\t\tdispatch({ type: \"GET_RECIPES\", payload: response.data });\n\t\t}).catch(()=> alert(\"Recipe not found\"))\n\t}\n}  \n\n/* export function getRecipesByName(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(`http://localhost:3001/recipes?name=${name}`);\n      if (json.data.length === 0) {\n        dispatch({\n          type: \"ERROR\",\n          payload: \"Not recipe found\",\n        });\n      }\n      return dispatch({\n        type: \"GET_RECIPES_BY_NAME\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} */\nexport function getRecipesByName(name) {\n\treturn (dispatch) => {\n\t\taxios.get(\"http://localhost:3001/recipes?name=\" + name)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: \"GET_RECIPES_BY_NAME\", payload: response.data });\n\t\t}).catch(()=> alert(\"Recipe not found\"))\n\t};\n}\nexport function getDiets() {\n\treturn (dispatch) => {\n\t\taxios.get(\"http://localhost:3001/types\")\n\t\t.then((response) => {\n\t\t\tdispatch({ type: \"GET_DIETS\", payload: response.data });\n\t\t}).catch(()=> alert(\"Diet not found\"))\n\t};\n}  \n\n\n/* export function getDiets() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/types\", {});\n      return dispatch({\n        type: \"GET_DIETS\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} */\n\n/* export function postRecipe(payload) {\n\treturn (dispatch) => {\n\t\taxios.post(\"http://localhost:3001/recipe\", payload)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: \"POST_RECIPE\", payload: response});\n\t\t}).catch(()=> alert(\"Is not possible create a recipe\"))\n\t};\n}   */\n\n export function postRecipe(payload) {\n  return async function (dispatch) {\n    try {\n      const json = await axios.post(\"http://localhost:3001/recipe\", payload);\n      return json;\n    } catch (error) {\n      alert(\"POST ERROR\");\n    }\n  };\n} \n\nexport function deleteRecipe (id) {\n  return async function(dispatch){\n    try {\n      const response = await axios.delete(\"http://localhost:3001/recipe\" + id)\n      console.log(response)\n      return response;\n    } catch (error) {\n      alert(\"DELETE ERROR\")\n    }\n } \n}\n\nexport function UpdateRecipe(payload, id){\n\treturn async function (dispatch) {\n    try {\n      var json = await axios.put(\"http://localhost:3001/recipe\" + id, payload);\n\t\t\treturn dispatch({\n\t\t\t\ttype: \"UPDATE_RECIPE\",\n\t\t\t\tpayload: json.data\n\t\t\t})\t\n    } catch (error) {\n      alert(\"UPDATE ERROR\")\n    }\n  }\n}\n\nexport function filterRecipesbyDiets(payload) {\n  return {\n    type: \"FILTER_BY_DIETS\",\n    payload,\n  };\n}\nexport function filterRecipesbyDishTypes(payload) {\n  return {\n    type: \"FILTER_BY_DISHTYPES\",\n    payload,\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload,\n  };\n}\n\nexport function orderByScore(payload) {\n  return {\n    type: \"ORDER_BY_SCORE\",\n    payload,\n  };\n}\nexport function orderByLike(payload) {\n  return {\n    type: \"ORDER_BY_LIKE\",\n    payload,\n  };\n}\n\nexport function getDetails(id) {\n\treturn (dispatch) => {\n\t\taxios.get(\"http://localhost:3001/recipes/\" + id)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: \"GET_DETAILS\", payload: response.data });\n\t\t}).catch(()=> alert(`Ups...we dont have a recipe with ${id} as ID `))\n\t};\n}\n/* export function getDetails(id) {\n  return async function (dispatch) {\n    console.log(\"ID\", id);\n    try {\n      const json = await axios.get(`http://localhost:3001/recipes/${id}`);\n      return dispatch({\n        type: \"GET_DETAILS\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} */\nexport function getNamesRecipes() {\n\treturn (dispatch) => {\n\t\taxios.get(\"http://localhost:3001/names\")\n\t\t.then((response) => {\n\t\t\tdispatch({ type: \"GET_NAMES_RECIPES\", payload: response.data });\n\t\t});\n    \n\t};\n}  \n\nexport function filterRecipesbyNames(payload) {\n  return {\n    type: \"FILTER_BY_NAMES\",\n    payload,\n  };\n}\n\nexport function removeDetail() {\n  return {\n    type: \"REMOVE_DETAILS\",\n  };\n}\n\nexport function removeRecipe() {\n  return {\n    type: \"REMOVE_RECIPE\",\n  };\n}\n\n export function filterCreated(payload) {\n  return {\n      type: \"FILTER_CREATED\",\n      payload\n  }\n} \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}